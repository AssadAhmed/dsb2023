---
title: "energy-shiny"
format: html
server: shiny
---

## Shiny Documents


```{r}
library(tidyverse)
library(janitor)
library(wbstats)
library(viridis)
library(shiny)
library(bs4Dash)

url <- "https://nyc3.digitaloceanspaces.com/owid-public/data/energy/owid-energy-data.csv"

energy2 <- vroom::vroom(url)
glimpse(energy2)

fubar <- energy2 %>% 
  select(1:5,
         biofuel = biofuel_electricity,
         coal = coal_electricity,
         gas = gas_electricity,
         hydro = hydro_electricity,
         nuclear = nuclear_electricity,
         oil = oil_electricity,
         other_renewable = other_renewable_exc_biofuel_electricity,
         solar = solar_electricity,
         wind = wind_electricity, 
         electricity_demand,
         electricity_generation,
         net_elec_imports,	# Net electricity imports, measured in terawatt-hours
         energy_per_capita,	# Primary energy consumption per capita, measured in kilowatt-hours	Calculated by Our World in Data based on BP Statistical Review of World Energy and EIA International Energy Data
         energy_per_gdp,	# Energy consumption per unit of GDP. This is measured in kilowatt-hours per 2011 international-$.
         per_capita_electricity, #	Electricity generation per capita, measured in kilowatt-hours
  ) %>% 
  mutate(electricity_percent = per_capita_electricity / energy_per_capita,
         percent_renew = (solar + wind + hydro + other_renewable ) / electricity_generation)


energy_long <- fubar %>% 
  select(1:3,         
         biofuel,
         coal,
         gas,
         hydro,
         nuclear,
         oil,
         other_renewable,
         solar,
         wind ) %>% 
  pivot_longer(cols = 4:12,
               names_to = 'source',
               values_to = 'value') %>% 
  drop_na(iso_code) %>% 
  drop_na(value)





# Download data for C02 emissions per capita https://data.worldbank.org/indicator/EN.ATM.CO2E.PC
co2_percap <- wb_data(country = "countries_only", 
                      indicator = "EN.ATM.CO2E.PC", 
                      start_date = 1970, 
                      end_date = 2022,
                      return_wide=FALSE) %>% 
  filter(!is.na(value)) %>% 
  #drop unwanted variables
  select(-c(unit, obs_status, footnote, last_updated)) %>% 
  rename(year = date,
         co2percap = value)


# Download data for GDP per capita  https://data.worldbank.org/indicator/NY.GDP.PCAP.PP.CD
gdp_percap <- wb_data(country = "countries_only", 
                      indicator = "NY.GDP.PCAP.PP.CD", 
                      start_date = 1970, 
                      end_date = 2022,
                      return_wide=FALSE) %>% 
  filter(!is.na(value)) %>% 
  #drop unwanted variables
  select(-c(unit, obs_status, footnote, last_updated)) %>% 
  rename(year = date,
         GDPpercap = value)



join1 <- gdp_percap %>% 
  left_join(co2_percap, by = c("country", "year")) %>% 
  select(iso = iso3c.x, country, year, GDPpercap, co2percap) %>% 
  drop_na()



```


```{r}
# Load necessary libraries
library(shiny)
library(ggplot2)
library(ggrepel)

# use bigger font size
theme_set(theme_bw(base_size = 18)) 

# Define UI
ui <- fluidPage(
  titlePanel("Sources of electricity production"),
  sidebarLayout(
    sidebarPanel(
      selectInput("country", "Select a country:", choices = unique(energy_long$country)),   
      sliderInput("years", "Select a range of years:", 
                  min = 1990L, max = 2021L, 
                  value = as.integer(c(1990,2021)), step = 1)
    ),
    
    
    # Main panel with output plots
    mainPanel(
      plotOutput("electricity_sources"),
      plotOutput("co2_plot")
    )
    
    
  )
)

# Define server
server <- function(input, output) {
  
  output$electricity_sources <- renderPlot({
    
        energy_long %>% filter(country == input$country,
                         year >= input$years[1], 
                         year <= input$years[2]) %>% 
    
   mutate(source = fct_reorder(source, value, max)) %>% 
           
    ggplot()+
    aes(x=year, y = value, fill=source )+
    geom_area(color="grey90", 
              alpha = 0.5,
              position = "fill")+ # so you get to 100%
    theme_bw()+
    scale_fill_viridis(discrete = T,
                       option = "H") +
    scale_y_continuous(labels = scales::percent)+
    labs(title = glue::glue("Electricity Production Mix for ", {{input$country}}),
         x=NULL,
         y=NULL,
         fill= "Source")
    
    
  })
  
    # Render co2 percapita
  output$co2_plot <- renderPlot({

        join1 %>% filter(country == input$country,
                         year >= input$years[1],
                         year <= input$years[2]) %>% 

    ggplot()+
      aes(x = GDPpercap, y = co2percap) +
      geom_point() +
      geom_text_repel(aes(label = year), size = 4)+
      ggtitle("Are CO2 and GDP per capita related?") +
      xlab("GDP per capita") +
      ylab("CO2 per capita")
  })
  
  
  
  
}

# Run the application
shinyApp(ui = ui, server = server)

```